{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "sql-password": {
      "type": "parameter.v0",
      "value": "{sql-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true
        }
      }
    },
    "sql": {
      "type": "container.v0",
      "connectionString": "Server={sql.bindings.tcp.host},{sql.bindings.tcp.port};User ID=sa;Password={sql-password.value};TrustServerCertificate=true",
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "volumes": [
        {
          "name": "download-cache-data",
          "target": "/var/opt/mssql",
          "readOnly": false
        }
      ],
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sql-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 1433
        }
      }
    },
    "download-cache": {
      "type": "value.v0",
      "connectionString": "{sql.connectionString};Database=download-cache"
    },
    "migrations": {
      "type": "project.v0",
      "path": "../TheArchiver.MigrationService/TheArchiver.MigrationService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ConnectionStrings__download-cache": "{download-cache.connectionString}"
      }
    },
    "api": {
      "type": "project.v0",
      "path": "../TheArchiver.API/TheArchiver.API.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "Kestrel__Endpoints__http__Url": "http://*:{api.bindings.http.targetPort}",
        "ConnectionStrings__download-cache": "{download-cache.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 5255
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 5255
        }
      }
    },
    "monitor": {
      "type": "project.v0",
      "path": "../TheArchiver.Monitor/TheArchiver.Monitor.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{monitor.bindings.http.targetPort}",
        "ConnectionStrings__download-cache": "{download-cache.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        }
      }
    },
    "background-download": {
      "type": "project.v0",
      "path": "../TheArchiver.DownloadWorker/TheArchiver.DownloadWorker.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "MaxConcurrentThreads": "10",
        "ShareLocation": "/Users/pauldavis/test",
        "PluginsLocation": "./Plugins",
        "NotificationUrl": "https://notify.pauljoda.com/local",
        "ConnectionStrings__download-cache": "{download-cache.connectionString}",
        "services__monitor__http__0": "{monitor.bindings.http.url}",
        "services__monitor__https__0": "{monitor.bindings.https.url}"
      }
    },
    "ffmpeg": {
      "type": "container.v1",
      "build": {
        "context": "../ffmpeg",
        "dockerfile": "../ffmpeg/Dockerfile"
      },
      "bindMounts": [
        {
          "source": "../../../test",
          "target": "/scan",
          "readOnly": false
        }
      ],
      "env": {
        "ScanLocation": "/scan"
      }
    }
  }
}