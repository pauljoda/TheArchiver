name: Publish to GitHub Container Registry

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'PublishGitHubAction/**'

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'

      - name: Login to GitHub Containers
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Migration Container
        run: |
          dotnet publish "./TheArchiver.MigrationService/TheArchiver.MigrationService.csproj" -t:PublishContainer -r "linux-x64" -p:ContainerRegistry="ghcr.io" -p:ContainerRepository="pauljoda/the-archiver-migrations" -p:ContainerImageTag="latest"

      - name: Publish API Container
        run: |
          dotnet publish "./TheArchiver.API/TheArchiver.API.csproj" -t:PublishContainer -r "linux-x64" -p:ContainerRegistry="ghcr.io" -p:ContainerRepository="pauljoda/the-archiver-api" -p:ContainerImageTag="latest"\
      
      - name: Build FFMPEG Container
        run: |
          run: docker build -t ghcr.io/pauljoda/the-archiver-ffmpeg:latest ./ffmpeg/DockerFile

      - name: Push FFMPEG Image
        run: |
          run: docker push ghcr.io/pauljoda/the-archiver-ffmpeg:latest
        
      - name: Publish Download Worker Container
        run: |
          dotnet publish "./TheArchiver.DownloadWorker/TheArchiver.DownloadWorker.csproj" -t:PublishContainer -r "linux-x64" -p:ContainerRegistry="ghcr.io" -p:ContainerRepository="pauljoda/the-archiver-downloadworker" -p:ContainerImageTag="latest"
    
