@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject QueueMonitorService MonitorService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Dashboard - TheArchiver Monitor</PageTitle>

<!-- Main Content -->
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Status Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Queue Status Card -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md dark:hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">‚è≥</span>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Items in Queue</p>
                        <p class="text-2xl font-bold text-blue-600 dark:text-blue-400">@queueCount</p>
                    </div>
                </div>
                <div class="mt-4">
                    <a href="download-queue" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 text-sm font-medium">
                        View Queue ‚Üí
                    </a>
                </div>
            </div>

            <!-- Failed Downloads Card -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md dark:hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-red-100 dark:bg-red-900/30 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">‚ùå</span>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Failed Downloads</p>
                        <p class="text-2xl font-bold text-red-600 dark:text-red-400">@failedCount</p>
                    </div>
                </div>
                <div class="mt-4">
                    <a href="failed-downloads" class="text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300 text-sm font-medium">
                        View Failed ‚Üí
                    </a>
                </div>
            </div>

            <!-- Total Activity Card -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md dark:hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">üìà</span>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Total Activities</p>
                        <p class="text-2xl font-bold text-green-600 dark:text-green-400">@recentActivities.Count</p>
                    </div>
                </div>
                <div class="mt-4">
                    <a href="console-output" class="text-green-600 dark:text-green-400 hover:text-green-800 dark:hover:text-green-300 text-sm font-medium">
                        View Console ‚Üí
                    </a>
                </div>
            </div>

            <!-- System Status Card -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md dark:hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-lg flex items-center justify-center">
                            <div class="w-3 h-3 bg-emerald-400 rounded-full animate-pulse"></div>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600 dark:text-gray-400">System Status</p>
                        <p class="text-lg font-semibold text-emerald-600 dark:text-emerald-400">Online</p>
                    </div>
                </div>
                <div class="mt-4">
                    <span class="text-emerald-600 dark:text-emerald-400 text-sm font-medium">All services running</span>
                </div>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <!-- Recent Activity -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 flex items-center">
                            <span class="mr-2">üìã</span>
                            Recent Activity
                        </h3>
                        <span class="text-sm text-gray-500 dark:text-gray-400">Last 10 events</span>
                    </div>
                </div>
                <div class="p-6">
                    @if (recentActivities.Count == 0)
                    {
                        <div class="text-center py-8">
                            <div class="text-gray-400 dark:text-gray-600 text-4xl mb-2">üì≠</div>
                            <p class="text-gray-500 dark:text-gray-400">No recent activity</p>
                        </div>
                    }
                    else
                    {
                        <div class="space-y-3 max-h-96 overflow-y-auto">
                            @foreach (var activity in recentActivities.TakeLast(10).Reverse())
                            {
                                <div class="flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                    <div class="flex-shrink-0 mt-0.5">
                                        <div class="w-2 h-2 rounded-full @GetActivityColorClass(activity.Type)"></div>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <p class="text-sm text-gray-900 dark:text-gray-100 break-words">@activity.Message</p>
                                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">@activity.Timestamp.ToString("MMM dd, HH:mm:ss")</p>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 flex items-center">
                        <span class="mr-2">‚ö°</span>
                        Quick Actions
                    </h3>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <button class="flex items-center justify-center px-4 py-3 bg-blue-600 dark:bg-blue-700 text-white rounded-lg hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200 font-medium" @onclick="RefreshStatus">
                            <span class="mr-2">üîÑ</span>
                            Refresh Status
                        </button>
                        
                        <a href="download-queue" class="flex items-center justify-center px-4 py-3 bg-green-600 dark:bg-green-700 text-white rounded-lg hover:bg-green-700 dark:hover:bg-green-600 transition-colors duration-200 font-medium text-center">
                            <span class="mr-2">üì•</span>
                            View Queue
                        </a>
                        
                        <a href="failed-downloads" class="flex items-center justify-center px-4 py-3 bg-red-600 dark:bg-red-700 text-white rounded-lg hover:bg-red-700 dark:hover:bg-red-600 transition-colors duration-200 font-medium text-center">
                            <span class="mr-2">‚ö†Ô∏è</span>
                            View Failed
                        </a>
                        
                        <a href="console-output" class="flex items-center justify-center px-4 py-3 bg-gray-600 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-700 dark:hover:bg-gray-600 transition-colors duration-200 font-medium text-center">
                            <span class="mr-2">üñ•Ô∏è</span>
                            Console Output
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer Info -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
            <div class="flex items-center justify-between">
                <div class="flex items-center text-sm text-gray-600 dark:text-gray-400">
                    <span class="mr-2">‚ÑπÔ∏è</span>
                    TheArchiver Monitor - Real-time download queue monitoring
                </div>
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
                    Last updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm:ss")
                </div>
            </div>
        </div>
    </div>

@code {
    private int queueCount = 0;
    private int failedCount = 0;
    private List<ActivityLog> recentActivities = new();
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        await LoadStatusCounts();
        await SetupSignalRConnection();
    }

    private async Task LoadStatusCounts()
    {
        var (queue, failed) = await MonitorService.GetStatusCountsAsync();
        queueCount = queue;
        failedCount = failed;
    }

    private async Task SetupSignalRConnection()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/monitorhub"))
            .Build();

        hubConnection.On("QueueUpdated", async () =>
        {
            await LoadStatusCounts();
            AddActivity("Queue updated", ActivityType.Info);
            await InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string>("DownloadStarted", (url) =>
        {
            AddActivity($"Download started: {url}", ActivityType.Success);
            InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string>("DownloadCompleted", (url) =>
        {
            AddActivity($"Download completed: {url}", ActivityType.Success);
            InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string, string>("DownloadFailed", (url, error) =>
        {
            AddActivity($"Download failed: {url} - {error}", ActivityType.Error);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private void AddActivity(string message, ActivityType type)
    {
        recentActivities.Add(new ActivityLog 
        { 
            Message = message, 
            Type = type, 
            Timestamp = DateTime.Now 
        });
        
        // Keep only last 50 activities
        if (recentActivities.Count > 50)
        {
            recentActivities.RemoveAt(0);
        }
    }

    private async Task RefreshStatus()
    {
        await LoadStatusCounts();
        AddActivity("Status refreshed", ActivityType.Info);
    }

    private string GetActivityClass(ActivityType type)
    {
        return type switch
        {
            ActivityType.Success => "text-success",
            ActivityType.Error => "text-danger",
            ActivityType.Warning => "text-warning",
            _ => "text-info"
        };
    }

    private string GetActivityColorClass(ActivityType type)
    {
        return type switch
        {
            ActivityType.Success => "bg-green-400",
            ActivityType.Error => "bg-red-400",
            ActivityType.Warning => "bg-yellow-400",
            _ => "bg-blue-400"
        };
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    private class ActivityLog
    {
        public string Message { get; set; } = "";
        public ActivityType Type { get; set; }
        public DateTime Timestamp { get; set; }
    }

    private enum ActivityType
    {
        Info,
        Success,
        Warning,
        Error
    }
}
